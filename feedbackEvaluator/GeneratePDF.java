package feedbackEvaluator;

import java.io.File;
import java.io.IOException;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.encryption.InvalidPasswordException;
import org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject;

@SuppressWarnings("serial")
public class GeneratePDF {
	
	public GeneratePDF(String address, String addressToImage) {
		String addressString = address;
		String addressPDF = "E:/PDFs/" + addressString + "_pdf.pdf";
		File file = new File(addressPDF);
		try {
			//Creating PDF Document
			PDDocument doc = new PDDocument();
		    PDPage blankPage = new PDPage();
		    doc.addPage( blankPage );
			
			// Retrieving the page
			PDPage page = doc.getPage(0);
			System.out.println("Step 2 Done");
			
			// Creating PDImageXObject object
			PDImageXObject pdImage = PDImageXObject.createFromFile(addressToImage, doc);
			System.out.println("Step 3 Done");
			
			//Creating UPES Logo
			PDImageXObject pdImage2 = PDImageXObject.createFromFile("E:/PDFs/system/upeslogo.png", doc);
			
			// creating the PDPageContentStream object
			PDPageContentStream contents = new PDPageContentStream(doc, page);
			System.out.println("Step 4 Done");
			
			// Drawing the image in the PDF document
			contents.drawImage(pdImage, 45, 140, 520, 360);
			contents.drawImage(pdImage2, 410, 700, 175, 75);
			System.out.println("Images inserted");
			
			//Inserting the Text
			contents.beginText();
			contents.setFont(PDType1Font.TIMES_ROMAN, 25);
			contents.newLineAtOffset(45, 740);
			String text = "Autogenerated Report";
			contents.showText(text);
			contents.endText();
			System.out.println("Content Inserted");

			// Closing the PDPageContentStream object
			contents.close();

			// Saving the document
			doc.save(addressPDF);

			// Closing the document
			doc.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
}